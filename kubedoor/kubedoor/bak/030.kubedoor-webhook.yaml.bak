{{- if .Values.kubedoor.webhook.enable }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kubedoor-issuer
  namespace: kubedoor
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kubedoor-webhook-cert
  namespace: kubedoor
spec:
  duration: 8640h
  renewBefore: 360h
  dnsNames:
    - kubedoor-webhook
    - kubedoor-webhook.kubedoor
    - kubedoor-webhook.kubedoor.svc
    - kubedoor-webhook.kubedoor.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kubedoor-issuer
  secretName: kubedoor-webhook-cert
  subject:
    organizationalUnits:
      - kubedoor
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubedoor-config
  namespace: kubedoor
data:
  CK_HOST: {{ .Values.clickhouse.CK_HOST | quote }}
  CK_PORT: {{ .Values.clickhouse.CK_PORT | quote }}
  CK_HTTP_PORT: {{ .Values.clickhouse.CK_HTTP_PORT | quote }}
  CK_USER: {{ .Values.clickhouse.CK_USER | quote }}
  CK_PASSWORD: {{ .Values.clickhouse.CK_PASSWORD | quote }}
  CK_DATABASE: kubedoor
  PROM_TYPE: {{ .Values.tsdb.type | quote }}
  {{- if eq .Values.tsdb.type "KubeDoor" }}
  PROM_URL: "http://{{ .Values.monit.vm_single.user }}:{{ .Values.monit.vm_single.passwd }}@victoria-metrics.kubedoor:8428"
  {{- else if eq .Values.tsdb.type "Victoria-Metrics-Cluster" }}
  PROM_URL: {{ .Values.tsdb.remoteRead | quote }}
  {{- else }}
  PROM_URL: {{ .Values.tsdb.url | quote }}
  {{- end }}
  PROM_K8S_TAG_KEY: {{ .Values.tsdb.external_labels_key | quote }}
  PROM_K8S_TAG_VALUE: {{ .Values.tsdb.external_labels_value | quote }}
  NAMESPACE_LIST: {{ .Values.config.NAMESPACE_LIST | quote }}
  PEAK_TIME: {{ .Values.config.PEAK_TIME | quote }}
  MSG_TYPE: {{ .Values.config.MSG_TYPE | quote }}
  MSG_TOKEN: {{ .Values.config.MSG_TOKEN | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedoor-webhook
  namespace: kubedoor
  labels:
    app: kubedoor-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedoor-webhook
  template:
    metadata:
      labels:
        app: kubedoor-webhook
    spec:
      volumes:
        - name: cert
          secret:
            secretName: kubedoor-webhook-cert
      containers:
        - name: kubedoor-webhook
          image: {{ .Values.image.repository }}/kubedoor-webhook:{{ .Values.image.kubedoor_webhook_tag }}
          envFrom:
            - configMapRef:
                name: kubedoor-config
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 1Mi
          volumeMounts:
            - name: cert
              readOnly: true
              mountPath: /serving-certs
          livenessProbe:
            tcpSocket:
              port: 443
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 443
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kubedoor-webhook
  namespace: kubedoor
  labels:
    app: kubedoor-webhook
spec:
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  selector:
    app: kubedoor-webhook
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedoor-service-account
  namespace: kubedoor
---
apiVersion: v1
kind: Secret
metadata:
  name: kubedoor-secret
  namespace: kubedoor
  annotations:
    kubernetes.io/service-account.name: "kubedoor-service-account"
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedoor-cluster-role
rules:
  - verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
    apiGroups:
      - apps
    resources:
      - deployments
      - deployments/rollback
      - deployments/scale
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - apps
    resources:
      - deployments
      - deployments/scale
      - deployments/status
  - verbs:
      - create
      - get
      - list
      - delete
    apiGroups:
      - batch
    resources:
      - cronjobs
  - verbs:
      - create
      - get
      - list
      - delete
    apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
  - verbs:
      - patch
      - update
    apiGroups:
      - ""
    resources:
      - namespaces
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedoor-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: kubedoor-service-account
    namespace: kubedoor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedoor-cluster-role

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: kubedoor-collect
  namespace: kubedoor
spec:
  schedule: 0 1 * * *
  concurrencyPolicy: Allow
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: kubedoor-collect
              image: registry.cn-shenzhen.aliyuncs.com/starsl/busybox-curl
              command:
                - /bin/sh
                - '-c'
                - >
                  curl --location --request POST
                  'http://kubedoor-api.kubedoor/api/table' --header 'Content-Type:
                  application/json' --data ''
              imagePullPolicy: IfNotPresent
          restartPolicy: Never
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
{{- end }}
