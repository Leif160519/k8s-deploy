apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  default.rules: |
    groups:
      - name: general default rule
        rules:
        - alert: 节点失联
          expr: |
            avg_over_time(up{job="node"}[5m]) < .9
            AND
            max_over_time(up{job="node"}[1m]) == 0
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: "检查机器/网络/采集器"

        - alert: 剩余空间
          expr: |
            node_filesystem_avail_bytes{fstype=~"ext.|xfs", mountpoint!~"/boot|/var/backups/.*"} < 2000*1024*1024
            AND
            (
                node_filesystem_avail_bytes{fstype=~"ext.|xfs", mountpoint!~"/boot|/var/backups/.*"}
                /
                node_filesystem_size_bytes{fstype=~"ext.|xfs", mountpoint!~"/boot|/var/backups/.*"}
            ) < .20
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "不足20%，{{ $labels.mountpoint }} 剩余 {{ $value | humanize1024 }}B"

        - alert: 剩余空间
          expr: |
            node_filesystem_avail_bytes{fstype=~"ext.|xfs", mountpoint!~"/boot|/var/backups/.*"} < 500*1024*1024
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: "不足500MiB，{{ $labels.mountpoint }} 亟需清理，当前 {{ $value | humanize1024 }}B"

        - alert: Inodes 剩余空间
          expr: 1 - node_filesystem_files_free{job=~"node",fstype=~"ext.?|xfs",mountpoint !~".*(pod|docker).*"} / node_filesystem_files{job=~"node",fstype=~"ext.?|xfs",mountpoint !~".*(pod|docker).*"} > 0.8
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "不足20%，{{ $labels.mountpoint }} 亟需清理，当前 {{ $value | humanizePercentage }}"

        - alert: CPU负载
          expr: |
            avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) by (all,os,instance,job,mode)< 0.01
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "利用率超过99%"

        - alert: 空闲内存
          expr:
            node_memory_MemAvailable_bytes{job="node"} < 200*1024*1024
            AND
            node_memory_MemAvailable_bytes{job="node"} / node_memory_MemTotal_bytes{job="node"} < .10
          for: 15m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "少于10%，剩余 {{ $value | humanize1024 }}B"

        - alert: 时差过大
          expr: abs(node_time_seconds-time()) / 60 > 30
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "时差为{{ $value | printf \"%.f\" }}分钟"

        - alert: CPU平均温度温度
          expr: ceil(avg(node_hwmon_temp_celsius{job="node",chip="platform_coretemp_0"}) by(job,instance,chip)) > 70
          for: 5m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "当前 {{ $value | humanize }}℃"
  http.rules: |
    groups:
      - name: http rule
        rules:
        - alert: 站点请求失败
          expr: probe_success{job="consul-blackbox"} == 0
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: "{{ $labels.env }}_{{ $labels.name }}({{ $labels.project }})：站点无法访问"

        - alert: SSL证书有效期
          expr: (probe_ssl_earliest_cert_expiry{job="consul-blackbox"}-time()) / 3600 / 24 < 15
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "{{ $labels.env }}_{{ $labels.name }}({{ $labels.project }})：证书有效期剩余{{ $value | humanize }}天"
  k8s-apiserver.rules: |
    groups:
    - name: ApiServer
      rules:
      - alert: KubernetesApiServerErrors
        expr: sum(rate(apiserver_request_total{job="kubelet",code=~"^(?:5..)$"}[1m])) / sum(rate(apiserver_request_total{job="kubelet"}[1m])) * 100 > 3
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes API server errors (instance {{ $labels.instance }})
          description: "Kubernetes API server is experiencing high error rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesApiClientErrors
        expr: (sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes API client errors (instance {{ $labels.instance }})
          description: "Kubernetes API client is experiencing high error rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesClientCertificateExpiresNextWeek
        expr: apiserver_client_certificate_expiration_seconds_count{job="kubelet"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubelet"}[5m]))) < 7*24*60*60
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }})
          description: "A client certificate used to authenticate to the apiserver is expiring next week.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesClientCertificateExpiresSoon
        expr: apiserver_client_certificate_expiration_seconds_count{job="kubelet"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubelet"}[5m]))) < 24*60*60
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }})
          description: "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      - alert: KubernetesApiServerLatency
        expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"} [10m])) WITHOUT (instance, resource)) / 1e+06 > 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes API server latency (instance {{ $labels.instance }})
          description: "Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: SslCertificateExpiry(<90Days)
        expr: ssl_verified_cert_not_after{chain_no="0"} - time() < 86400 * 90
        for: 0m
        labels:
          severity: warning
          level: P1
        annotations:
          summary: SSL certificate expiry (< 90 days) (instance {{ $labels.instance }})
          description: "{{ $labels.instance }} Certificate is expiring in 7 days\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-cronjob.rules: |
    groups:
    - name: CronJob
      rules:
      - alert: KubernetesCronjobTooLong
        expr: time() - kube_cronjob_next_schedule_time > 3600
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes CronJob too long (instance {{ $labels.instance }})
          description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesJobSlowCompletion
        expr: kube_job_spec_completions - kube_job_status_succeeded > 0
        for: 12h
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes job slow completion (instance {{ $labels.instance }})
          description: "Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-daemonset.rules: |
    groups:
    - name: Daemonset
      rules:
      - alert: KubernetesDaemonsetRolloutStuck
        expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0
        for: 10m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes DaemonSet rollout stuck (instance {{ $labels.instance }})
          description: "Some Pods of DaemonSet are not scheduled or not ready\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesDaemonsetMisscheduled
        expr: kube_daemonset_status_number_misscheduled > 0
        for: 1m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes DaemonSet misscheduled (instance {{ $labels.instance }})
          description: "Some DaemonSet Pods are running where they are not supposed to run\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-deployment.rules: |
    groups:
    - name: Deployment
      rules:
      - alert: Deployment at 0 Replicas
        expr: |
          sum(kube_deployment_status_replicas) by (deployment,exported_namespace)  < 1
        for: 1m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Deployment {{$labels.deployment}} in {{$labels.exported_namespace}} is currently having no pods running

      - alert: KubernetesDeploymentReplicasMismatch
        expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available
        for: 10m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }})
          description: "Deployment Replicas mismatch\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesDeploymentGenerationMismatch
        expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
        for: 10m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes Deployment generation mismatch (instance {{ $labels.instance }})
          description: "A Deployment has failed but has not been rolled back.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: PodRootFSSpaceUsageHigh
        expr: sum(container_fs_usage_bytes{id =~ "/kubepods.*"}) by (namespace, pod, id, instance) > 10000000000
        for: 1m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: "Pod {{ $labels.pod }} on node {{ $labels.instance }} has high rootfs space usage"
          description: "Pod {{ $labels.pod }} on node {{ $labels.instance }} is using more than 10GB of rootfs space"
  k8s-hpa.rules: |
    groups:
    - name: HPA
      rules:
      - alert: KubernetesHpaScalingAbility
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale"} == 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes HPA scaling ability (instance {{ $labels.instance }})
          description: "Pod is unable to scale\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesHpaMetricAvailability
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes HPA metric availability (instance {{ $labels.instance }})
          description: "HPA is not able to collect metrics\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesHpaScaleCapability
        expr: kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes HPA scale capability (instance {{ $labels.instance }})
          description: "The maximum number of desired Pods has been hit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-jmx.rules: "groups:\n- name: JMX\n  rules:\n  - alert: 应用失联\n    expr: up{job=\"jvm\"}
    == 0\n    for: 5m\n    labels:\n      severity: critical\n      level: P0\n    annotations:\n
    \     summary: \"当前应用：{{ $labels.application }}\"\n      description: \"The maximum
    number of desired Pods has been hit\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels
    }}\"\n\n  - alert: 堆栈内存使用率\n    expr: |\n      (jvm_memory_bytes_used{job=\"jvm\",area=\"heap\"}\n
    \     /\n      jvm_memory_bytes_max{job=\"jvm\",area=\"heap\"})\n      > 0.9\n
    \   for: 5m\n    labels:\n      severity: warning\n      level: P1\n    annotations:\n
    \     summary: \"jvm占用超过90%，应用名称 {{ $labels.application }} 当前 {{ $value | humanizePercentage
    }}\"\n      description: \"The maximum number of desired Pods has been hit\\n
    \ VALUE = {{ $value }}\\n  LABELS = {{ $labels }}\"\n\n  - alert: Pod cpu使用率\n
    \   expr: |\n      sum(rate(container_cpu_usage_seconds_total{image!=\"\",container!=\"POD\",container!=\"\"}[1m]))
    by (pod,namespace,instance,container) \n      / \n      (sum(container_spec_cpu_quota{image!=\"\",container!=\"POD\",container!=\"\"}/100000)
    by (pod,namespace,instance,container)) * 100\n      > 80\n    for: 1m\n    labels:\n
    \     severity: warning\n      level: P1\n    annotations:\n      summary: \"命名空间:
    {{ $labels.namespace }} | Pod名称: {{ $labels.pod }} | 实例名称: {{ $labels.instance
    }} | cpu用大于上限的80%,当前值{{ $value }}\"\n      description: \"The maximum number of
    desired Pods has been hit\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}\"\n\n
    \ - alert: FullGc频率过高\n    expr: increase(jvm_gc_collection_seconds_count{gc=\"ConcurrentMarkSweep\"}[1h])
    > 3\n    for: 1m\n    labels:\n      severity: warning\n      level: P1\n    annotations:\n
    \     summary: \"{{ $labels.app }} 1小时的FGC次数>3次\"\n      description: \"ns:{{
    $labels.namespace }} pod:{{ $labels.pod }} 1小时的FGC次数>3次，当前值({{ $value }})\"\n\n
    \ - alert: 非堆栈内存使用率\n    expr: jvm_memory_bytes_used{job=\"jvm\", area=\"nonheap\"}
    / jvm_memory_bytes_max * 100 > 80\n    for: 1m\n    labels:\n      severity: warning\n
    \     level: P1\n    annotations:\n      summary: \"{{ $labels.app }} 非堆内存使用>80%\"\n
    \     description: \"ns:{{ $labels.namespace }} pod:{{ $labels.pod }} 非堆内存使用率>80%，当前值({{
    $value }}%)\"\n\n- name: prometheus\n  rules:\n  - alert: PrometheusConfigurationReloadFailure\n
    \   expr: prometheus_config_last_reload_successful != 1\n    for: 0m\n    labels:\n
    \     level: P1\n      severity: warning\n    annotations:\n      summary: Prometheus
    configuration reload failure (instance {{ $labels.instance }})\n      description:
    \"Prometheus configuration reload error\\n  VALUE = {{ $value }}\\n  LABELS =
    {{ $labels }}\"\n\n  - alert: PrometheusTooManyRestarts\n    expr: changes(process_start_time_seconds{job=~\"prometheus|pushgateway|alertmanager\"}[15m])
    > 2\n    for: 0m\n    labels:\n      level: P1\n      severity: warning\n    annotations:\n
    \     summary: Prometheus too many restarts (instance {{ $labels.instance }})\n
    \     description: \"Prometheus has restarted more than twice in the last 15 minutes.
    It might be crashlooping.\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}\"\n\n
    \ - alert: PrometheusAlertmanagerJobMissing\n    expr: absent(up{job=\"alertmanager\"})\n
    \   for: 0m\n    labels:\n      level: P1\n      severity: warning\n    annotations:\n
    \     summary: Prometheus AlertManager job missing (instance {{ $labels.instance
    }})\n      description: \"A Prometheus AlertManager job has disappeared\\n  VALUE
    = {{ $value }}\\n  LABELS = {{ $labels }}\"\n\n  - alert: PrometheusAlertmanagerConfigurationReloadFailure\n
    \   expr: alertmanager_config_last_reload_successful != 1\n    for: 0m\n    labels:\n
    \     level: P1\n      severity: warning\n    annotations:\n      summary: Prometheus
    AlertManager configuration reload failure (instance {{ $labels.instance }})\n
    \     description: \"AlertManager configuration reload error\\n  VALUE = {{ $value
    }}\\n  LABELS = {{ $labels }}\"\n\n  - alert: PrometheusAlertmanagerConfigNotSynced\n
    \   expr: count(count_values(\"config_hash\", alertmanager_config_hash)) > 1\n
    \   for: 0m\n    labels:\n      level: P1\n      severity: warning\n    annotations:\n
    \     summary: Prometheus AlertManager config not synced (instance {{ $labels.instance
    }})\n      description: \"Configurations of AlertManager cluster instances are
    out of sync\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}\"\n\n  - alert:
    PrometheusNotConnectedToAlertmanager\n    expr: prometheus_notifications_alertmanagers_discovered
    < 1\n    for: 0m\n    labels:\n      level: P1\n      severity: warning\n    annotations:\n
    \     summary: Prometheus not connected to alertmanager (instance {{ $labels.instance
    }})\n      description: \"Prometheus cannot connect the alertmanager\\n  VALUE
    = {{ $value }}\\n  LABELS = {{ $labels }}\"\n"
  k8s-node.rules: |
    groups:
    - name: Nodes
      rules:
      - alert: KubernetesNodeReady
        expr: kube_node_status_condition{condition="Ready",status="true"} == 0
        for: 10m
        labels:
          severity: critical
          level: P0
        annotations:
          summary: Kubernetes Node ready (instance {{ $labels.instance }})
          description: "Node {{ $labels.node }} has been unready for a long time\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostOomKillDetected
        expr: increase(node_vmstat_oom_kill[1m]) > 0
        for: 0m
        labels:
          severity: warning
          level: P1
        annotations:
          summary: Host OOM kill detected (instance {{ $labels.instance }})
          description: "OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    #  - alert: HostKernelVersionDeviations
    #    expr: count(sum(label_replace(node_uname_info, "kernel", "$1", "release", "([0-9]+.[0-9]+.[0-9]+).*")) by (kernel)) > 1
    #    for: 6h
    #    labels:
    #      severity: warning
    #      level: P1
    #    annotations:
    #      summary: Host kernel version deviations (instance {{ $labels.instance }})
    #      description: "Different kernel versions are running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostContextSwitching
        expr: (rate(node_context_switches_total[5m])) / (count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})) > 10000
        for: 0m
        labels:
          severity: warning
          level: P1
        annotations:
          summary: 上下文切换速度过快 (instance {{ $labels.instance }})
          description: "上下文切换 on node (> 10000 / s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostOutOfInodes
        expr: node_filesystem_files_free / node_filesystem_files * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
          level: P1
        annotations:
          summary: Host out of inodes (instance {{ $labels.instance }})
          description: "Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostDiskWillFillIn24Hours
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Host disk will fill in 24 hours (instance {{ $labels.instance }})
          description: "Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          level: P0
          severity: warning
        annotations:
          summary: Host out of disk space (instance {{ $labels.instance }})
          description: "Disk is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskWriteRate
        expr: sum by (instance) (rate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Host unusual disk write rate (instance {{ $labels.instance }})
          description: "Disk is probably writing too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualDiskReadRate
        expr: sum by (instance) (rate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50
        for: 5m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Host unusual disk read rate (instance {{ $labels.instance }})
          description: "Disk is probably reading too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualNetworkThroughputOut
        expr: sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Host unusual network throughput out (instance {{ $labels.instance }})
          description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostUnusualNetworkThroughputIn
        expr: sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Host unusual network throughput in (instance {{ $labels.instance }})
          description: "Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesMemoryPressure
        expr: kube_node_status_condition{condition="MemoryPressure",status="true"} == 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes memory pressure (instance {{ $labels.instance }})
          description: "{{ $labels.node }} has MemoryPressure condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesDiskPressure
        expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes disk pressure (instance {{ $labels.instance }})
          description: "{{ $labels.node }} has DiskPressure condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesNetworkUnavailable
        expr: kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes network unavailable (instance {{ $labels.instance }})
          description: "{{ $labels.node }} has NetworkUnavailable condition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesOutOfCapacity
        expr: sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90
        for: 2m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes out of capacity (instance {{ $labels.instance }})
          description: "{{ $labels.node }} is out of capacity\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-pod.rules: |
    groups:
    - name: Pods
      rules:
      - alert: KubernetesPodNotHealthy
        expr: sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0
        for: 5m
        labels:
          severity: critical
          level: P0
        annotations:
          summary: Kubernetes Pod not healthy (instance {{ $labels.instance }})
          description: "Pod has been in a non-ready state for longer than 15 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesPodCrashLooping
        expr: sum(increase(kube_pod_container_status_restarts_total[5m])) by (pod,namespace,container,instance) > 2
        for: 5m
        labels:
          severity: warning
          level: P0
        annotations:
          summary: Kubernetes pod crash looping (instance {{ $labels.instance }})
          description: "Pod {{ $labels.pod }} is crash looping\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: Pod内存使用率(limit占用百分比,不包含cache)
        expr: |
          (sum by(pod, namespace, instance, container) (container_memory_working_set_bytes{name!=""}) / sum by(pod, namespace, instance, container) (container_spec_memory_limit_bytes > 0) * 100) > 80
        for: 2m
        labels:
          severity: warning
          level: P1
        annotations:
          summary: "命名空间: {{ $labels.namespace }} | Pod名称: {{ $labels.pod }} | 内存使用大于上限的80% (当前值: {{ $value }})"

      - alert: KubernetesContainerOomKiller
        expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
        for: 0m
        labels:
          severity: critical
          level: P1
        annotations:
          summary: Kubernetes container oom killer (instance {{ $labels.instance }})
          description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-prometheus.rules: |
    groups:
    - name: prometheus
      rules:
      - alert: PrometheusConfigurationReloadFailure
        expr: prometheus_config_last_reload_successful != 1
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus configuration reload failure (instance {{ $labels.instance }})

      - alert: PrometheusTooManyRestarts
        expr: changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus too many restarts (instance {{ $labels.instance }})

      - alert: PrometheusAlertmanagerJobMissing
        expr: absent(up{job="alertmanager"})
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus AlertManager job missing (instance {{ $labels.instance }})

      - alert: PrometheusAlertmanagerConfigurationReloadFailure
        expr: alertmanager_config_last_reload_successful != 1
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus AlertManager configuration reload failure (instance {{ $labels.instance }})

      - alert: PrometheusAlertmanagerConfigNotSynced
        expr: count(count_values("config_hash", alertmanager_config_hash)) > 1
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus AlertManager config not synced (instance {{ $labels.instance }})

      - alert: PrometheusNotConnectedToAlertmanager
        expr: prometheus_notifications_alertmanagers_discovered < 1
        for: 0m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Prometheus not connected to alertmanager (instance {{ $labels.instance }})
  k8s-pvc.rules: |
    groups:
    - name: PersistentVolumeClaim
      rules:
      - alert: KubernetesPersistentvolumeclaimPending
        expr: sum by (namespace,persistentvolumeclaim) (kube_persistentvolumeclaim_status_phase{phase="Pending"}) == 1
        for: 2m
        labels:
          severity: warning
          level: P0
        annotations:
          summary: Kubernetes PersistentVolumeClaim pending (instance {{ $labels.instance }})
          description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesPersistentvolumeError
        expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0
        for: 0m
        labels:
          level: P0
          severity: warning
        annotations:
          summary: Kubernetes PersistentVolume error (instance {{ $labels.instance }})
          description: "Persistent volume is in bad state\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  k8s-statefulset.rules: |
    groups:
    - name: Statefulset
      rules:
      - alert: KubernetesStatefulsetDown
        expr: kube_statefulset_replicas != kube_statefulset_status_replicas_ready > 0
        for: 1m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes StatefulSet down (instance {{ $labels.instance }})
          description: "A StatefulSet went down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesStatefulsetReplicasMismatch
        expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
        for: 10m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }})
          description: "A StatefulSet does not match the expected number of replicas.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: KubernetesStatefulsetUpdateNotRolledOut
        expr: max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)
        for: 10m
        labels:
          level: P1
          severity: warning
        annotations:
          summary: Kubernetes StatefulSet update not rolled out (instance {{ $labels.instance }})
          description: "StatefulSet update has not been rolled out.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  moosefs.rules: |
    groups:
      - name: moosefs
        rules:
        - alert: "文件系统降级"
          expr: moosefs_all_chunks_matrix_chunkclass_endangered{job="node"}
                / (moosefs_all_chunks_matrix_chunkclass_endangered{job="node"} + moosefs_all_chunks_matrix_chunkclass_stable{job="node"}) > 0.1
          for: 1h
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "危急占比 {{ $value | humanizePercentage }}"

        - alert: "文件系统落盘"
          expr: time() - moosefs_master_info_last_successful_store{job="node"} > (3600 * 2)
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "距离上次 {{ $value | humanizeDuration }}"

        - alert: "文件系统配额"
          expr: |
            (moosefs_active_quotas_current_size{job="node"} / moosefs_active_quotas_soft_size{job="node"}) <= 1 > 0.9
            OR
            (moosefs_active_quotas_current_size{job="node"} / moosefs_active_quotas_hard_size{job="node"}) <= 1 > 0.9
          for: 1m
          labels:
            severity: info
            level: P2
          annotations:
            summary: "{{ $labels.path }}: {{ $value | humanizePercentage }}"

        - alert: "文件系统配额"
          expr: |
            (moosefs_active_quotas_soft_size{job="node"} - moosefs_active_quotas_current_size{job="node"}) >= 0 < (2*1024*1024*1024)
            OR
            (moosefs_active_quotas_hard_size{job="node"} - moosefs_active_quotas_current_size{job="node"}) >= 0 < (2*1024*1024*1024)
          for: 1m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: "{{ $labels.path }}: {{ $value | humanize1024 }}B"
  mysql.rules: |
    groups:
      - name: mysql probe
        rules:
        - alert: MySQL 宕机
          expr: mysql_up == 0
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: MySQL down

        - alert: MySQL 连接过多(>80%)
          expr: max_over_time(mysql_global_status_threads_connected[1m]) / mysql_global_variables_max_connections > 0.8
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: MySQL too many connections (> 80%), 当前：{{ $value | humanizePercentage }}

        - alert: MySQL 连接过多
          expr: irate(mysql_global_status_threads_connected[3m]) > 1000
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: MySQL Connections： {{ $value | humanize }}

        - alert: MySQL 高线程运行
          expr: max_over_time(mysql_global_status_threads_running[1m]) / mysql_global_variables_max_connections > 0.6
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: MySQL high threads running,当前：{{ $value | humanizePercentage }}

        - alert: MySQL 慢查询
          expr: increase(mysql_global_status_slow_queries[1m]) > 0
          for: 5m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: MySQL slow queries , 每分钟慢查询：{{ $value | humanize }}

        - alert: MySQL 当前活跃的连接数过多
          expr: mysql_global_status_threads_running > 100
          for: 1m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: 当前活跃的连接数： {{ $value }}

        - alert: MySQL 当前updating状态的线程过多
          expr: mysql_info_schema_processlist_threads{job="mysql",state=~"updating"} > 100
          for: 1m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: 当前updating状态的线程：{{ $value }}

        - alert: MySQL 高 QPS
          expr: irate(mysql_global_status_questions[3m]) > 30000
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: 当前QPS：{{ $value | humanize }}

        - alert: MySQL InnoDB 日志等待
          expr: rate(mysql_global_status_innodb_log_waits[15m]) > 10
          for: 1m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: MySQL InnoDB log waits

        - alert: MySQL 重新启动
          expr: mysql_global_status_uptime < 60
          for: 0m
          labels:
            severity: info
            level: P1
          annotations:
            summary: MySQL restarted
  prometheus.rules: |
    groups:
      - name: prometheus
        rules:
        - alert: 监测站失联
          expr: |
            avg_over_time(up{job="prometheus"}[5m]) < .9
            AND
            max_over_time(up{job="prometheus"}[1m]) == 0
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: "请检查prometheus服务状态"

      - name: node_usage_record_rules
        interval: 1m
        rules:
        - record: cpu:usage:rate1m
          expr: (1 - avg(irate(node_cpu_seconds_total{mode="idle"}[3m])) by (instance,vendor,account,group,name)) * 100
        - record: mem:usage:rate1m
          expr: (1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 1m

      external_labels:
        env: kubernetes

    remote_write:
      - url: http://victoria:8428/api/v1/write

    rule_files:
      - /etc/prometheus/*.rules

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    scrape_configs:
      - job_name: grafana
        static_configs:
        - targets:
          - grafana:3000
          labels:
            env: kubernetes
      - job_name: blackbox
        static_configs:
        - targets:
          - blackbox-exporter:9115
          labels:
            env: kubernetes
      - job_name: consul-blackbox
        metrics_path: /probe
        consul_sd_configs:
          - server: 'consul:8500'
            token: 'a87d22ab-09c6-d25f-b490-86f0823bc209'
            services: ['blackbox_exporter']
        relabel_configs:
          - source_labels: ["__meta_consul_service_metadata_instance"]
            target_label: __param_target
          - source_labels: [__meta_consul_service_metadata_module]
            target_label: __param_module
          - source_labels: [__meta_consul_service_metadata_module]
            target_label: module
          - source_labels: ["__meta_consul_service_metadata_company"]
            target_label: company
          - source_labels: ["__meta_consul_service_metadata_env"]
            target_label: env
          - source_labels: ["__meta_consul_service_metadata_name"]
            target_label: name
          - source_labels: ["__meta_consul_service_metadata_project"]
            target_label: project
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115
      - job_name: prometheusalert
        static_configs:
        - targets:
          - prometheusalert:8080
          labels:
            env: kubernetes
      - job_name: jenkins
        metrics_path: /prometheus
        static_configs:
        - targets:
          - jenkins.devops.svc:8080
          labels:
            env: kubernetes
      - job_name: alertmanager
        static_configs:
        - targets:
          - alertmanager:9093
          labels:
            env: kubernetes
      - job_name: prometheus
        metrics_path: /metrics
        static_configs:
        - targets:
          - prometheus:9090
          labels:
            env: kubernetes
      - job_name: victoria
        static_configs:
        - targets:
          - victoria:8428
          labels:
            env: kubernetes
      - job_name: kubernetes-cadvisor
        metrics_path: /metrics/cadvisor
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - source_labels: [__address__]
          regex: '(.*):10250'
          replacement: '${1}:10255'
          target_label: __address__
          action: replace
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

        metric_relabel_configs:
        - source_labels: [instance]
          separator: ;
          regex: (.+)
          target_label: node
          replacement: $1
          action: replace

        - source_labels: [pod_name]
          separator: ;
          regex: (.+)
          target_label: pod
          replacement: $1
          action: replace

        - source_labels: [container_name]
          separator: ;
          regex: (.+)
          target_label: container
          replacement: $1
          action: replace

      - job_name: kube-state-metrics
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - monitoring
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
          regex: kube-state-metrics
          replacement: $1
          action: keep
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: k8s_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: k8s_sname
      - job_name: 'ingress-nginx-controller'
        static_configs:
          - targets: ['ingress-nginx-controller-admission.ingress-nginx.svc.cluster.local:10254']
            labels:
              env: kubernetes
      - job_name: node
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - source_labels: [__address__]
          regex: '(.*):10250'
          replacement: '${1}:9100'
          target_label: __address__
          action: replace
      - job_name: kubelet
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
      - job_name: coredns
        static_configs:
          - targets: ['kube-dns.kube-system.svc:9153']
            labels:
              env: kubernetes
      - job_name: ssl-exporter
        metrics_path: /probe
        static_configs:
        - targets:
          - kubernetes.default.svc:443
        relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: ssl-exporter:9219
      - job_name: minio
        metrics_path: /minio/v2/metrics/cluster
        scheme: http
        static_configs:
        - targets: ['192.168.31.80:9000']
      - job_name: consul-node
        consul_sd_configs:
          - server: 'consul:8500'
            token: 'a87d22ab-09c6-d25f-b490-86f0823bc209'
            refresh_interval: 30s
            services: ['alicloud_LTAI5tAXH2zLeaeHwDNdgdd2_ecs', 'selfnode_exporter']
            tags: ['linux']
        relabel_configs:
          - source_labels: [__meta_consul_tags]
            regex: .*OFF.*
            action: drop
          - source_labels: ['__meta_consul_service']
            target_label: cservice
          - source_labels: ['__meta_consul_service_metadata_vendor']
            target_label: vendor
          - source_labels: ['__meta_consul_service_metadata_region']
            target_label: region
          - source_labels: ['__meta_consul_service_metadata_group']
            target_label: group
          - source_labels: ['__meta_consul_service_metadata_account']
            target_label: account
          - source_labels: ['__meta_consul_service_metadata_name']
            target_label: name
          - source_labels: ['__meta_consul_service_metadata_iid']
            target_label: iid
          - source_labels: ['__meta_consul_service_metadata_exp']
            target_label: exp
          - source_labels: ['__meta_consul_service_metadata_instance']
            target_label: instance
          - source_labels: [instance]
            target_label: __address__
      - job_name: consul-redis
        metrics_path: /scrape
        consul_sd_configs:
          - server: 'consul:8500'
            token: 'a87d22ab-09c6-d25f-b490-86f0823bc209'
            refresh_interval: 30s
            services: ['selfredis_exporter']
        relabel_configs:
          - source_labels: [__meta_consul_tags]
            regex: .*OFF.*
            action: drop
          - source_labels: [__meta_consul_service_address,__meta_consul_service_port]
            regex: ([^:]+)(?::\d+)?;(\d+)
            target_label: __param_target
            replacement: $1:$2
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: redis-exporter:9121
          - source_labels: ['__meta_consul_service_metadata_vendor']
            target_label: vendor
          - source_labels: ['__meta_consul_service_metadata_region']
            target_label: region
          - source_labels: ['__meta_consul_service_metadata_group']
            target_label: group
          - source_labels: ['__meta_consul_service_metadata_account']
            target_label: account
          - source_labels: ['__meta_consul_service_metadata_name']
            target_label: name
          - source_labels: ['__meta_consul_service_metadata_iid']
            target_label: iid
          - source_labels: ['__meta_consul_service_metadata_mem']
            target_label: mem
          - source_labels: ['__meta_consul_service_metadata_itype']
            target_label: itype
          - source_labels: ['__meta_consul_service_metadata_ver']
            target_label: ver
          - source_labels: ['__meta_consul_service_metadata_exp']
            target_label: exp
      - job_name: consul-mysql
        metrics_path: /probe
        consul_sd_configs:
          - server: 'consul:8500'
            token: 'a87d22ab-09c6-d25f-b490-86f0823bc209'
            refresh_interval: 30s
            services: ['selfrds_exporter']
        relabel_configs:
          - source_labels: [__meta_consul_tags]
            regex: .*OFF.*
            action: drop
          - source_labels: [__meta_consul_service_address,__meta_consul_service_port]
            regex: ([^:]+)(?::\d+)?;(\d+)
            target_label: __param_target
            replacement: $1:$2
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: mysqld-exporter:9104
          - source_labels: ['__meta_consul_service_metadata_vendor']
            target_label: vendor
          - source_labels: ['__meta_consul_service_metadata_region']
            target_label: region
          - source_labels: ['__meta_consul_service_metadata_group']
            target_label: group
          - source_labels: ['__meta_consul_service_metadata_account']
            target_label: account
          - source_labels: ['__meta_consul_service_metadata_name']
            target_label: name
          - source_labels: ['__meta_consul_service_metadata_iid']
            target_label: iid
          - source_labels: ['__meta_consul_service_metadata_exp']
            target_label: exp
          - source_labels: ['__meta_consul_service_metadata_cpu']
            target_label: cpu
          - source_labels: ['__meta_consul_service_metadata_mem']
            target_label: mem
          - source_labels: ['__meta_consul_service_metadata_disk']
            target_label: disk
          - source_labels: ['__meta_consul_service_metadata_itype']
            target_label: itype
      - job_name: aliyun-mysql
        static_configs:
          - targets:
              - github.icu:9104
            labels:
              account: aliyun
              group: cloud
              name: github.icu
              region: blog
              vendor: docker
  redis.rules: |
    groups:
      - name: redis probe
        rules:
        - alert: Redis 宕机
          expr: redis_up == 0
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} down

        - alert: Redis 丢失主节点
          expr: redis_instance_info{role="master",job="consul-redis"} < 1
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} missing master

        - alert: Redis 太多主节点
          expr: redis_instance_info{role="master",job="consul-redis"} > 1
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} too many masters, current {{ $value }}

        - alert: Redis 与slave节点失联
          expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} disconnected slaves

        - alert: Redis 副本损坏
          expr: delta(redis_connected_slaves[1m]) < 0
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} replication broken

        - alert: Redis 集群震荡
          expr: changes(redis_connected_slaves[1m]) > 1
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} cluster flapping

    #    - alert: Redis 缺少备份超过24小时
    #      expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24
    #      for: 1m
    #      labels:
    #        severity: warning
    #        level: P1
    #      annotations:
    #        summary: Redis {{ $labels.name }} missing backup

        # The exporter must be started with --include-system-metrics flag or REDIS_EXPORTER_INCL_SYSTEM_METRICS=true environment variable.
        - alert: Redis 超系统物理内存90%
          expr: redis_memory_used_bytes / redis_total_system_memory_bytes > 0.9
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: Redis {{ $labels.name }} out of system memory, current {{ $value | humanizePercentage }}

        - alert: Redis 超系统物理内存95%
          expr: redis_memory_used_bytes / redis_total_system_memory_bytes > 0.95
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} out of system memory, current {{ $value | humanizePercentage }}

        - alert: Redis 超系统物理内存90%
          expr: redis_memory_used_bytes / redis_total_system_memory_bytes > 0.9
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: Redis {{ $labels.name }} out of system memory, current {{ $value | humanizePercentage }}

        - alert: Redis 超系统物理内存95%
          expr: redis_memory_used_bytes / redis_total_system_memory_bytes > 0.95
          for: 2m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} out of system memory, current {{ $value | humanizePercentage }}

        - alert: Redis 超出配置的最大内存
          expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: Redis {{ $labels.name }} out of configured maxmemory, current {{ $value | humanizePercentage }}

        - alert: Redis 连接数超过1000
          expr: redis_connected_clients > 1000
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: Redis {{ $labels.name }} too many connections, current {{ $value }}

        - alert: Redis 没有足够的连接数
          expr: redis_connected_clients < 5
          for: 2m
          labels:
            severity: warning
            level: P1
          annotations:
            summary: Redis {{ $labels.name }} not enough connections, current {{ $value }}

        - alert: Redis 拒绝连接
          expr: increase(redis_rejected_connections_total[1m]) > 0
          for: 1m
          labels:
            severity: critical
            level: P0
          annotations:
            summary: Redis {{ $labels.name }} rejected connections
