global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 1m

  external_labels:
    env: kubernetes

remote_write:
  - url: http://victoria:8428/api/v1/write

rule_files:
  - /etc/prometheus/rules/*.rules

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

scrape_configs:
  - job_name: grafana
    static_configs:
    - targets:
      - grafana:3000
      labels:
        env: kubernetes
  - job_name: prometheusalert
    static_configs:
    - targets:
      - prometheusalert:8080
      labels:
        env: kubernetes
  - job_name: jenkins
    metrics_path: /prometheus
    static_configs:
    - targets:
      - jenkins.devops.svc:8080
      labels:
        env: kubernetes
  - job_name: alertmanager
    static_configs:
    - targets:
      - alertmanager:9093
      labels:
        env: kubernetes
  - job_name: backuppc
    metrics_path: /BackupPC_Admin
    params:
      action:
      - metrics
      format:
      - prometheus
    basic_auth:
      username: backuppc
      password: backuppc
    static_configs:
    - targets:
      - backuppc.devops.svc:8088
      labels:
        env: kubernetes
    metric_relabel_configs:
    - source_labels:
      - host
      target_label: all
    - action: labeldrop
      regex: host
  - job_name: prometheus
    metrics_path: /metrics
    static_configs:
    - targets:
      - prometheus:9090
      labels:
        env: kubernetes
  - job_name: victoria
    static_configs:
    - targets:
      - victoria:8428
      labels:
        env: kubernetes
  - job_name: kubernetes-cadvisor
    metrics_path: /metrics/cadvisor
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - source_labels: [__address__]
      regex: '(.*):10250'
      replacement: '${1}:10255'
      target_label: __address__
      action: replace
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    metric_relabel_configs:
    - source_labels: [instance]
      separator: ;
      regex: (.+)
      target_label: node
      replacement: $1
      action: replace
    - source_labels: [pod_name]
      separator: ;
      regex: (.+)
      target_label: pod
      replacement: $1
      action: replace
    - source_labels: [endpoint_name]
      separator: ;
      regex: (.+)
      target_label: endpoint
      replacement: $1
      action: replace
    - source_labels: [container_name]
      separator: ;
      regex: (.+)
      target_label: container
      replacement: $1
      action: replace
  - job_name: kube-state-metrics
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - monitoring
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
      regex: kube-state-metrics
      replacement: $1
      action: keep
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: k8s_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: k8s_sname
  - job_name: kubernetes-nodes
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - source_labels: [__address__]
      regex: '(.*):10250'
      replacement: '${1}:9100'
      target_label: __address__
      action: replace
  - job_name: kubelet
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
  - job_name: coredns
    static_configs:
      - targets: ['kube-dns.kube-system.svc:9153']
        labels:
          env: kubernetes
