image:
  repository: swr.cn-south-1.myhuaweicloud.com/starsl.cn
  kubedoor_agent_tag: 1.0.0
  kubedoor_master_tag: 1.0.0
  kubedoor_api_tag: 1626-f3f02840
  kubedoor_web_tag: 1602-d8ee54a2
  kubedoor_webhook_tag: 1562-d3889fb4

clickhouse:
  enable: true # enable为true时，表示自动新安装clickhouse单机版到kubedoor命名空间内。
  storage: 100Gi # 存储空间大小。(enable为true时会使用该变量)
  storageClass: ssd # 查看您K8S的StorageClass，指定有效的存储类，会自动创建PV/PVC。(enable为true时会使用该变量)

  CK_PASSWORD: "di37fg2k" # enable为true时，填写为default用户创建的ClickHouse密码。enable为false时，请填写已有的ClickHouse密码。

  # enable为true时，以下信息请勿修改。enable为false时，请填写您已有的ClickHouse信息。
  CK_HOST: "clickhouse.kubedoor" # ClickHouse数据库的IP
  CK_PORT: "9000" # ClickHouse数据库的TCP端口
  CK_HTTP_PORT: "8123" # ClickHouse数据库的HTTP端口
  CK_USER: "default" # ClickHouse数据库的账号


tsdb:
  # 采集K8S的指标数据存入时序数据库，请输入时序数据库的类型：KubeDoor, Prometheus, Victoria-Metrics-Single, Victoria-Metrics-Cluster。
  # type为KubeDoor时，表示自动新安装Victoria-Metrics-Single到kubedoor命名空间内，其它为使用您已有的时序数据库。
  type: "KubeDoor"


  # 以下两个字段KEY/VALUE是给存储为非Prometheus的远程存储用的，即为Prometheus/vmagent设置中的external_labels的key/value。
  # 用于多K8S监控数据写入到同一个时序数据库的场景，使用远程存储时，这种标签会增加到每一个指标中，这样通过这个标签就可以区分出这些指标属于哪个K8S了。

  # 如果您的K8S监控数据采集到了单独的Prometheus（存储就是Prometheus本身的）或者您使用了远程存储但是没有配置external_labels，请把external_labels_key设置为空""，external_labels_value设置为您的K8S名称。
  # 如果您已使用了非Prometheus的远程存储，请把以下两个字段设置为与您Prometheus/vmagent中已经已经配置的external_labels的key/value一致，否则会采集不到数据。
 
  # 如果您希望KubeDoor为您新安装内置的Victoria-Metrics-Single，则根据您需要设置好以下两个字段即可。
  external_labels_key: "origin_prometheus" # 注意key只能字母数字下划线，不能数字开头，不能有中横线和点。如果有多套K8S需要部署，请保持external_labels_key都相同。
  external_labels_value: "k8s-alpha"


  # 当type为: Prometheus, Victoria-Metrics-Single, 请填写您的时序数据库地址。
  # 注意：Prometheus默认端口是9090，Victoria-Metrics-Single默认端口是8428。
  url: "http://opsalpha:wEFHpZ6u2P@10.7.0.221:8428" #时序数据库的地址，http开头，端口号结尾，有认证的按例子格式填写。

  # 当type为: Victoria-Metrics-Cluster, 请分别填写完整的时序数据库读写接口地址。
  # 注意：Victoria-Metrics-Cluster默认读端口是8481，写端口是8480。
  remoteRead: "http://vmselect:8481/select/0/prometheus"
  remoteWrite: "http://vminsert:8480/insert/0/prometheus"


monit:
  # 当tsdb.type: "KubeDoor"时,才会安装Victoria-Metrics-Single。需要填写以下vm_single的内容。
  vm_single:
    retention: 30d # 监控数据的存储时长
    user: monit # vm_single的账号
    passwd: dduF1E3sj # vm_single的密码
    storage: 100Gi # 存储空间大小
    storageClass: ssd # 查看您K8S的StorageClass，指定有效的存储类，会自动创建PV/PVC


  # kubedoor集成的alertmanager，如果您已经有alertmanager，可设置为false不再安装。
  alertmanager:
    enable: true


  # 这是对接alertmanager的webhook方式的告警通知服务。支持企微，钉钉，飞书。
  # kubedoor集成的alertmanager中已经配置好对接到kubedoor-alarm通知服务。
  kubedoor_alarm:
    enable: true
    DEFAULT_AT: a01100 # 如果在告警规则中找不到annotations.at的值，则会使用该值(IM工具的用户ID)作为@的通知人。
    ALERTMANAGER_EXTURL: "http://10.1.118.123:30319" # alertmanager外部可访问的链接，用于收到告警通知后，可直接点击访问alertmanager进行屏蔽告警的按钮。


  # vmalert是替代Prometheus中告警规则计算并触发告警的组件。tsdb.type非Prometheus，并且monit.vmalert.enable是true时会安装。
  vmalert:
    enable: true
    # 如果alertmanager.enable为false，则需要填写您自己已有的alertmanager_url。
    alertmanager_url: "http://alertmanager:9093"


  # vmagent是比Prometheus性能更好,资源占用更小的指标采集组件。tsdb.type非Prometheus，并且monit.vmagent.enable是true时会安装。
  vmagent:
    enable: true


  # 用于Prometheus采集K8S监控数据指标，会安装到kubedoor命名空间。
  kube_state_metrics:
    enable: true
    version: v2.14.0


  # 用于Prometheus采集K8S节点数据指标，如果K8S节点已部署node-exporter可设置为false
  node_exporter:
    enable: true


kubedoor_web_secret:
  enabled: true # nginx basic认证配置文件的开关，首次部署必须设置为 true 表示创建该文件，用于KuboDoor-Web登录的账号密码创建；之后更新时，可以根据需要设置 false 表示不更新该文件，以防止直接在Secrets配置的用户密码被覆盖。
  nginx_auth: # htpasswd格式："用户名:加密密码"，可以在https://tool.lu/htpasswd/在线生成，加密方式选Crypt。
    - kubedoor:a3rsHbfPnb4Ps # 这是默认的账号密码，都是"kubedoor"，可以配置多个账号。


config: # 调用外部资源的配置信息
  # 这里是填写业务相关的信息
  NAMESPACE_LIST: "infra,vip,ops-monit,istio-system" # 需要采集数据和管控的命名空间列表，所有操作都关联这些命名空间。
  PEAK_TIME: "10:00:00-11:30:00" # 根据业务实际情况设置一个每日的高峰时间段(北京时间)，会采集该时间段的数据，计算P95值，并更新到数据库；不建议设置过长的时间段，因为最终是获取P95数据，所以选择一个业务高峰时间段即可。

  # 这里填写通知的信息
  # 钉钉机器人安全设置的自定义关键词请设置为：告警
  MSG_TYPE: "wecom" # 各类操作通知的消息类型：wecom, dingding, feishu
  MSG_TOKEN: "e8588-fb9c-488b5" # 通知服务对应的token
