apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: midplatform
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/name: kafka
  replicas: 3
  serviceName: kafka-hs
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kafka
        app.kubernetes.io/name: kafka
    spec:
      containers:
      - env:
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-hs:2181
        - name: KAFKA_LOG_DIRS
          value: /opt/kafka/data
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: JMX_PORT
          value: "9999"
        - name: TZ
          value: Asia/Shanghai
        image: schrbr/kafka:2.13-2.6.0
        command: ["sh","-c","export KAFKA_BROKER_Id=$(cat  /tmp/kafka-broker-id) && export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${HOSTNAME}.kafka-hs:9092 && start-kafka.sh"]
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 10
        name: kafka
        ports:
        - containerPort: 9092
          protocol: TCP
        - containerPort: 9999
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        startupProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
        - mountPath: /opt/kafka/data
          name: data
          subPath: kafka/data
        - mountPath: /opt/kafka/logs
          name: data
          subPath: kafka/logs
        - name: kafka-config
          mountPath: /tmp
      initContainers:
      - name: init-kafka-broker-id
        image: busybox
        command: ["sh", "-c", "echo $HOSTNAME | sed 's/[^0-9]//g' | awk '{print $1+1}' > /tmp/kafka-broker-id"]
        volumeMounts:
          - name: kafka-config
            mountPath: /tmp/
      - name: delete-lock-file
        image: busybox
        command: [find, /opt/kafka/data ,-type, f ,-name, '*.lock' ,-delete]
        volumeMounts:
          - name: data
            subPath: kafka/data
            mountPath: /opt/kafka/data
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: ""
        - name: kafka-config
          emptyDir: {}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: nfs-storage
      volumeMode: Filesystem
